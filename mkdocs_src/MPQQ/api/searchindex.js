Search.setIndex({"docnames": ["IDC", "Magic", "Magic.Magic_Qubit", "Magic.Magic_Qudit", "Utils", "entanglement_theory", "entanglement_theory.DynamicEntTheory", "entanglement_theory.Fawzi", "entanglement_theory.SeesawLOCC", "entanglement_theory.SeesawLOCC.bipartite-map", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.Output", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.data", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.utils", "entanglement_theory.SeesawLOCC.point-to-point", "entanglement_theory.SeesawLOCC.point-to-point.convolution", "entanglement_theory.SeesawLOCC.point-to-point.convolution.content", "entanglement_theory.SeesawLOCC.point-to-point.info_recovering", "entanglement_theory.SeesawLOCC.point-to-point.state-extract", "entanglement_theory.SeesawLOCC.point-to-point.state-extract.utils", "entanglement_theory.StaticEntTheory", "error_mitigation", "index", "static_coherence", "static_coherence.output_directory"], "filenames": ["IDC.rst", "Magic.rst", "Magic.Magic_Qubit.rst", "Magic.Magic_Qudit.rst", "Utils.rst", "entanglement_theory.rst", "entanglement_theory.DynamicEntTheory.rst", "entanglement_theory.Fawzi.rst", "entanglement_theory.SeesawLOCC.rst", "entanglement_theory.SeesawLOCC.bipartite-map.rst", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.rst", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.Output.rst", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.data.rst", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.utils.rst", "entanglement_theory.SeesawLOCC.point-to-point.rst", "entanglement_theory.SeesawLOCC.point-to-point.convolution.rst", "entanglement_theory.SeesawLOCC.point-to-point.convolution.content.rst", "entanglement_theory.SeesawLOCC.point-to-point.info_recovering.rst", "entanglement_theory.SeesawLOCC.point-to-point.state-extract.rst", "entanglement_theory.SeesawLOCC.point-to-point.state-extract.utils.rst", "entanglement_theory.StaticEntTheory.rst", "error_mitigation.rst", "index.rst", "static_coherence.rst", "static_coherence.output_directory.rst"], "titles": ["IDC", "Magic", "Magic.Magic_Qubit", "Magic.Magic_Qudit", "Utils", "entanglement_theory", "entanglement_theory.DynamicEntTheory", "entanglement_theory.Fawzi", "entanglement_theory.SeesawLOCC", "entanglement_theory.SeesawLOCC.bipartite-map", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.Output", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.data", "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.utils", "entanglement_theory.SeesawLOCC.point-to-point", "entanglement_theory.SeesawLOCC.point-to-point.convolution", "entanglement_theory.SeesawLOCC.point-to-point.convolution.content", "entanglement_theory.SeesawLOCC.point-to-point.info_recovering", "entanglement_theory.SeesawLOCC.point-to-point.state-extract", "entanglement_theory.SeesawLOCC.point-to-point.state-extract.utils", "entanglement_theory.StaticEntTheory", "error_mitigation", "Welcome to RTM\u2019s documentation!", "static_coherence", "static_coherence.output_directory"], "terms": {"applyquswitch": 0, "qs_k": 0, "rho_t": 0, "rho_c": 0, "requir": [0, 2, 4], "packag": [0, 2, 4], "qetlab": [0, 2, 4], "http": [0, 2, 4], "www": [0, 2, 4], "com": [0, 2, 4], "main_pag": [0, 2, 4], "quantinf": [0, 2, 7], "dr": [0, 2], "qubit": [0, 2], "org": [0, 2], "matlab": [0, 2], "html": [0, 2], "tdwo": [], "n": [0, 2, 3, 5, 6, 20, 21, 23], "quantum": [0, 2, 3, 4, 7, 21, 23], "channel": [0, 2, 3, 4, 5, 6, 7, 9, 21, 23], "cn_1": [], "cn_2": [], "have": 0, "krau": [0, 2], "represent": [0, 2, 3], "e_i": 0, "_i": 0, "f_j": 0, "_j": 0, "w_": [0, 3], "ij": 0, "ket": [0, 4, 21, 23], "0": [0, 2, 3, 4, 5, 20, 23], "bra": [0, 4, 21, 23], "_c": 0, "otim": [0, 5, 23], "2": [0, 2, 3, 4, 5, 6, 7, 20, 23], "1": [0, 2, 3, 4, 5, 7, 20, 21, 23], "paramet": [0, 2, 3, 4, 5, 6, 20, 21, 23], "numer": [0, 2, 3, 4, 5, 6, 20, 21, 23], "oper": [0, 2, 3, 21, 23], "switch": 0, "choi": [0, 2, 3, 4, 5, 6, 21, 23], "matrix": [0, 2, 3, 4, 5, 6, 20, 21, 23], "target": [0, 21, 23], "state": [0, 2, 3, 4, 5, 14, 20, 21, 23], "control": 0, "return": [0, 2, 3, 4, 5, 6, 20, 21, 23], "result": 0, "after": 0, "appli": 0, "type": [0, 2, 3, 4, 5, 6, 20, 21, 23], "rais": [0, 2, 3, 5, 6, 20], "error": [0, 2, 3, 5, 6, 20, 21, 23], "none": [0, 2, 3, 4], "exampl": [0, 2, 3, 7], "specif": 0, "linkprod": 0, "ja": 0, "jb": 0, "dim": [0, 3, 4, 5, 6, 23], "link": 0, "product": 0, "two": 0, "where": [0, 2, 3, 20, 23], "aout": 0, "i": [0, 2, 3, 4, 5, 6, 20, 21, 23], "bin": 0, "math": 0, "ca_": [], "rightarrow": [0, 3, 6], "cb_": [], "j_": 0, "cb": [], "circ": [0, 21], "ca": [], "tr_1": 0, "i_2": 0, "cdot": [0, 23], "i_0": 0, "t_1": 0, "The": [0, 2, 3, 4, 5, 6, 20, 21, 23], "A": [0, 2, 3, 4, 20, 23], "b": [0, 3, 5, 6, 20, 21, 23], "int": [0, 2, 3], "dimens": [0, 2, 3, 4, 5, 6, 7, 20, 21, 23], "If": [0, 2, 3, 5, 6, 20], "input": [0, 2, 3, 5, 6, 7, 20, 23], "doe": [0, 2, 3, 5, 6, 20], "match": [0, 2, 3, 5, 6, 20], "pure": [0, 2], "stabil": [0, 2], "an": [0, 2, 3, 5, 6, 20, 21, 23], "jout": 0, "ain": 0, "bout": 0, "qswitch": 0, "jn": [0, 3, 5, 6], "d": [0, 3, 4, 20, 21, 23], "matric": [0, 2], "system": [0, 23], "measur": [0, 23], "when": 0, "we": [0, 23], "insert": 0, "same": 0, "set": 0, "arg": 5, "joutplu": 0, "joutminu": 0, "comput": [0, 2, 3, 5], "kraus_o1": 0, "kraus_o2": 0, "_cotim": [], "cell": [0, 2, 3], "arrai": [0, 2, 3, 5, 6, 20], "first": 0, "second": 0, "gener": [0, 3, 4, 6, 7], "from": [0, 2, 21], "magic_qubit": 1, "magic_qudit": 1, "pauli2stab": 2, "a_mat": 2, "n_qubit": 2, "channel_mag": 2, "v2": 2, "github": 2, "jamesrseddon": 2, "convert": 2, "pauli": [2, 4], "number": [2, 3, 21], "each": [2, 21], "column": 2, "file": 2, "provid": [2, 4, 21, 23], "a_mat_2": 2, "load": 2, "amat2": 2, "mat": [2, 21], "stab_vec": 2, "randomcspo": 2, "num_": 2, "sampl": [2, 5, 21], "random": [2, 4, 7], "sift": 2, "cspo": 2, "contain": [2, 3], "chois_cspo_cel": 2, "10000": 2, "robmag": 2, "rho": [0, 2, 3, 5, 20, 23], "t": [2, 3, 20, 21, 23], "bartoszregula": 2, "me": 2, "code": 2, "cr": [], "min_": [2, 23], "vec": [], "q": 2, "big": 2, "_1": [0, 2, 5, 20, 21], "sum_i": 2, "q_i": 2, "ketbra": [2, 4, 23], "s_i": 2, "stab_n": [], "densiti": [2, 3, 4, 20, 23], "whose": 2, "ar": [2, 3], "robust": [2, 23], "rom_chan": 2, "j": [2, 4, 6, 23], "depend": 2, "trans_k": 2, "findchoicptprobust": 2, "cr_": [], "cn": [], "cn_": [], "pm": 2, "text": 2, "2p": 2, "p": [2, 4, 6, 20, 23], "pgeq": [], "0big": [], "form": 2, "test_robmag": 2, "clear": 2, "transform": 2, "chan_mana": 3, "mathcal": [0, 2, 3, 5, 6, 21, 23], "m": [3, 4, 21, 23], "log": [3, 5, 6, 20], "max_mathbf": [], "u": 3, "a_a": 3, "mathbf": 3, "_": [0, 2, 3, 5, 6, 20, 23], "w": [3, 20], "max_u": 3, "sum_v": 3, "v": 3, "vector": 3, "da": 3, "db": 3, "output": [3, 5, 6, 7, 10, 20], "": [3, 7, 20, 21], "mana": 3, "3": [3, 4], "qutrit": 3, "generate_a": 3, "num_copi": 3, "t_": [3, 6, 20], "tau": [3, 20], "a_1": 3, "a_2": 3, "z": [3, 21], "x": [3, 4, 7, 21, 23], "e": [3, 4, 20], "pi": 3, "a_": 3, "frac": [3, 4, 21, 23], "sum_": [3, 4, 23], "dagger": [3, 21], "heisenberg": 3, "weyl": 3, "copi": 3, "phase": 3, "space": [3, 7], "point": [3, 8], "mana_st": 3, "cm": [], "bmu": [], "wigner": 3, "given": [3, 23], "either": [3, 5, 6, 20], "qutrithst": 3, "qutritnst": 3, "qutritsst": 3, "argument": [], "thi": [4, 5], "function": [4, 5, 7], "ha": [], "qudit": 3, "qutrittst": 3, "wtracenorm": 3, "phaseop": 3, "trace": 3, "norm": [3, 5, 23], "linear": [3, 21], "calcul": 3, "cqmi": 4, "rhoabc": 4, "condit": 4, "mutual": 4, "inform": [4, 6, 21], "flagpolest": [4, 23], "paulichan": 4, "randmixedu": 4, "unitarychannel": [4, 23], "unitari": [4, 21, 23], "dynamicenttheori": 5, "fawzi": 5, "seesawlocc": 5, "staticenttheori": 5, "examplefunc": 5, "varargin": [5, 20, 21, 23], "cvx": [4, 5], "variabl": 5, "diamond": [5, 23], "safe": 5, "wai": 5, "allow": [5, 23], "us": [4, 5, 7, 23], "within": 5, "other": 5, "optim": [5, 23], "problem": 5, "gammappt": 5, "gamma_": 5, "operatornam": [5, 20], "ppt": [5, 20], "min": 5, "p_": [5, 6], "m_": 5, "bipartit": [5, 6, 8, 20], "store": [5, 6, 20], "assist": 5, "overhead": [5, 21], "virtualrecoveri": 5, "r": [2, 5, 6, 20, 23], "v_": [5, 6], "rec": 5, "rho_": [5, 20], "abc": 5, "c_1": [5, 21], "c_2": [5, 21], "_2": [0, 5, 20, 21], "ab": [5, 6, 20], "c_": 5, "geq": [2, 5, 6, 20], "cptp": [5, 21], "c": [5, 23], "virtual": 5, "recoveri": 5, "tripartit": 5, "maxlogneg": 6, "ln_": 6, "max": [6, 20], "inf": 6, "infti": [6, 20], "t_b": [6, 20], "bb": 6, "aba": 6, "leq": [6, 20], "kappa": 6, "entangl": [6, 20], "logarithm": [6, 20], "neg": [6, 20], "do": 6, "maxrainsinfo": 6, "y_": [6, 20], "bidirect": 6, "rain": [6, 20], "cqclacapac": 7, "inputarg1": 7, "inputarg2": 7, "alphabet": 7, "rho1": 7, "rho2": 7, "randrho": 7, "eaclacapac": 7, "environ": 7, "quadegcapac": 7, "capac": 7, "degrad": 7, "amplitud": [7, 23], "damp": 7, "relentropy": 7, "relentropyrecoveri": 7, "map": [8, 21], "twist": 9, "seesaw": 9, "data": 10, "util": [10, 18, 22], "convolut": 14, "info_recov": 14, "extract": 14, "content": 15, "eeta": 20, "e_": 20, "eta": 20, "project": 20, "onto": 20, "supp": 20, "subsystem": [20, 21], "logfidbineg": 20, "f": [20, 21], "sigma": [20, 23], "fidel": 20, "bi": 20, "logfidppt": 20, "logneg": 20, "maxrain": 20, "tr": 20, "r_": 20, "improv": 20, "entropi": 20, "rainsbound": 20, "sigma_": 20, "bound": 20, "templogneg": 20, "e_n": 20, "temper": 20, "proberrorcancel": 21, "noise_channel": 21, "produc": [4, 21, 23], "hptp": 21, "invers": 21, "nois": [4, 21], "realiz": [4, 21, 23], "which": 21, "jd": 21, "temm": 21, "kristan": 21, "sergei": 21, "bravyi": 21, "jai": 21, "gambetta": 21, "mitig": 21, "short": 21, "depth": 21, "circuit": 21, "physic": [21, 23], "review": [21, 23], "letter": [21, 23], "119": 21, "18": 21, "2017": 21, "180509": 21, "proberrorcancelo": 21, "o": 21, "respect": 21, "observ": [21, 23], "j1": 21, "j2": 21, "zhao": [4, 21, 23], "xia": 21, "wang": [4, 21, 23], "2023": 21, "recover": 21, "noisi": 21, "7": 21, "978": 21, "repect": [], "method": 21, "call": 21, "shift": 21, "ti": 21, "retriv": [], "classic": 21, "equal": 21, "distanc": [21, 23], "implement": 21, "jing": 21, "zhang": 21, "l": [21, 23], "k": [4, 21, 23], "retriev": 21, "non": 21, "featur": 21, "arxiv": [21, 23], "preprint": [21, 23], "2309": 21, "11403": 21, "swapgener": 21, "left": 21, "swap": 21, "ijk": 21, "jki": 21, "test": [21, 23], "depolar": 21, "go": 22, "quair": 22, "home": 22, "idc": 22, "static_coher": 22, "magic": 22, "entanglement_theori": 22, "error_mitig": 22, "output_directori": 23, "flag": [4, 23], "pole": [4, 23], "psi": [4, 23], "sqrt": [4, 23], "element": 23, "robustnesscoherentchannel": 23, "coher": [4, 23], "c_r": 23, "lambda": 23, "le": 23, "maxiamlli": [], "incoher": 23, "mio": 23, "list": 23, "default": 23, "d_i": 23, "d_o": 23, "d\u00edaz": [4, 23], "g": [4, 23], "fang": [4, 23], "rosati": [4, 23], "skotinioti": [4, 23], "calsamiglia": [4, 23], "winter": [4, 23], "2018": [4, 23], "reus": [4, 23], "process": [4, 23], "100": [4, 23], "robustnesscoherentst": 23, "napoli": 23, "bromlei": 23, "cianciaruso": 23, "piani": 23, "johnston": 23, "adesso": 23, "2016": 23, "116": 23, "15": 23, "150502": 23, "simulatecoherentchannel": 23, "target_channel": 23, "resource_st": 23, "free_op": 23, "find": 23, "free": 23, "minim": 23, "between": 23, "simul": 23, "omega": 23, "ox": [], "resourc": 23, "reousrce_st": 23, "choic": 23, "param": [], "dio": 23, "can": 23, "choos": 23, "simulatecoherentchannelprob": 23, "error_toler": 23, "maxim": 23, "success": 23, "probabl": 23, "simluat": [], "up": 23, "toler": 23, "epsilon": 23, "max_": [3, 23], "rubbish": 23, "ito": 23, "fujii": 23, "2024": [4, 23], "probabilist": 23, "2404": 23, "06775": 23, "choi_matrix": 23, "rho_out": 0, "note": [], "n_1": [], "n_2": [], "rangl": [0, 4], "strength": 4, "refer": 4, "author": 4, "benchi": 4, "last": 4, "updat": 4, "april": 4, "25": 4, "index": 4, "cvxr": 4, "download": 4, "4": 4, "jpa": 4, "standard": 4, "usag": 4, "mix": 4, "ju": 4, "maxentangl": 4, "blod": [], "mathrm": 2, "stab": 2, "_n": 2, "textbf": 2}, "objects": {"": [[0, 0, 1, "", "IDC"], [0, 0, 0, "-", "IDC"], [1, 0, 1, "", "Magic"], [1, 0, 0, "-", "Magic"], [4, 0, 1, "", "Utils"], [4, 0, 0, "-", "Utils"], [5, 0, 1, "", "entanglement_theory"], [5, 0, 0, "-", "entanglement_theory"], [21, 0, 1, "", "error_mitigation"], [21, 0, 0, "-", "error_mitigation"], [23, 0, 0, "-", "static_coherence"], [23, 0, 1, "", "static_coherence"]], "IDC": [[0, 1, 1, "", "ApplyQuSwitch"], [0, 1, 1, "", "LinkProd"], [0, 1, 1, "", "QS_K"], [0, 1, 1, "", "QSwitch"]], "Magic": [[2, 0, 1, "", "Magic_Qubit"], [2, 0, 0, "-", "Magic_Qubit"], [3, 0, 1, "", "Magic_Qudit"], [3, 0, 0, "-", "Magic_Qudit"]], "Magic.Magic_Qubit": [[2, 1, 1, "", "Pauli2Stab"], [2, 1, 1, "", "RandomCSPO"], [2, 1, 1, "", "RoM_Chan"], [2, 1, 1, "", "RobMag"], [2, 1, 1, "", "Test_RobMag"], [2, 1, 1, "", "Trans_K"]], "Magic.Magic_Qudit": [[3, 1, 1, "", "Chan_Mana"], [3, 1, 1, "", "Generate_A"], [3, 1, 1, "", "Mana_state"], [3, 1, 1, "", "QutritHstate"], [3, 1, 1, "", "QutritNstate"], [3, 1, 1, "", "QutritSstate"], [3, 1, 1, "", "QutritTstate"], [3, 1, 1, "", "WTraceNorm"]], "Utils": [[4, 1, 1, "", "CQMI"], [4, 1, 1, "", "FlagPoleState"], [4, 1, 1, "", "KetBra"], [4, 1, 1, "", "PauliChan"], [4, 1, 1, "", "RandMixedU"], [4, 1, 1, "", "UnitaryChannel"]], "entanglement_theory": [[6, 0, 1, "", "DynamicEntTheory"], [6, 0, 0, "-", "DynamicEntTheory"], [5, 1, 1, "", "ExampleFunc"], [7, 0, 1, "", "Fawzi"], [7, 0, 0, "-", "Fawzi"], [5, 1, 1, "", "GammaPPT"], [8, 0, 1, "", "SeesawLOCC"], [8, 0, 0, "-", "SeesawLOCC"], [20, 0, 1, "", "StaticEntTheory"], [20, 0, 0, "-", "StaticEntTheory"], [5, 1, 1, "", "VirtualRecovery"]], "entanglement_theory.DynamicEntTheory": [[6, 1, 1, "", "MaxLogNeg"], [6, 1, 1, "", "MaxRainsInfo"]], "entanglement_theory.Fawzi": [[7, 1, 1, "", "CQClaCapacity"], [7, 1, 1, "", "EAClaCapacity"], [7, 1, 1, "", "QuaDegCapacity"], [7, 1, 1, "", "RelEntropyEnt"], [7, 1, 1, "", "RelEntropyRecovery"]], "entanglement_theory.StaticEntTheory": [[20, 1, 1, "", "Eeta"], [20, 1, 1, "", "LogFidBiNeg"], [20, 1, 1, "", "LogFidPPT"], [20, 1, 1, "", "LogNeg"], [20, 1, 1, "", "MaxRains"], [20, 1, 1, "", "RainsBound"], [20, 1, 1, "", "TempLogNeg"]], "error_mitigation": [[21, 1, 1, "", "ProbErrorCancel"], [21, 1, 1, "", "ProbErrorCancelO"], [21, 1, 1, "", "ProbErrorCancelOS"], [21, 1, 1, "", "SwapGenerator"], [21, 1, 1, "", "testing"]], "static_coherence": [[23, 1, 1, "", "FlagPoleState"], [23, 1, 1, "", "KetBra"], [23, 1, 1, "", "RobustnessCoherentChannel"], [23, 1, 1, "", "RobustnessCoherentState"], [23, 1, 1, "", "SimulateCoherentChannel"], [23, 1, 1, "", "SimulateCoherentChannelProb"], [23, 1, 1, "", "UnitaryChannel"], [24, 0, 0, "-", "output_directory"], [24, 0, 1, "", "output_directory"], [23, 1, 1, "", "testing"]]}, "objtypes": {"0": "mat:module", "1": "mat:function"}, "objnames": {"0": ["mat", "module", "MATLAB module"], "1": ["mat", "function", "MATLAB function"]}, "titleterms": {"idc": 0, "magic": [1, 2, 3], "magic_qubit": 2, "magic_qudit": 3, "util": [4, 13, 19], "entanglement_theori": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "dynamicenttheori": 6, "fawzi": 7, "seesawlocc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "bipartit": [9, 10, 11, 12, 13], "map": [9, 10, 11, 12, 13], "twist": [10, 11, 12, 13], "channel": [10, 11, 12, 13], "seesaw": [10, 11, 12, 13], "output": 11, "data": 12, "point": [14, 15, 16, 17, 18, 19], "convolut": [15, 16], "content": 16, "info_recov": 17, "state": [18, 19], "extract": [18, 19], "staticenttheori": 20, "error_mitig": 21, "welcom": 22, "rtm": 22, "": 22, "document": 22, "static_coher": [23, 24], "output_directori": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"entanglement_theory.SeesawLOCC.bipartite-map": [[9, "entanglement-theory-seesawlocc-bipartite-map"]], "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw": [[10, "entanglement-theory-seesawlocc-bipartite-map-twisted-channel-seesaw"]], "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.Output": [[11, "entanglement-theory-seesawlocc-bipartite-map-twisted-channel-seesaw-output"]], "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.data": [[12, "entanglement-theory-seesawlocc-bipartite-map-twisted-channel-seesaw-data"]], "entanglement_theory.SeesawLOCC.bipartite-map.twisted-channel-seesaw.utils": [[13, "entanglement-theory-seesawlocc-bipartite-map-twisted-channel-seesaw-utils"]], "entanglement_theory.SeesawLOCC.point-to-point": [[14, "entanglement-theory-seesawlocc-point-to-point"]], "entanglement_theory.SeesawLOCC.point-to-point.convolution": [[15, "entanglement-theory-seesawlocc-point-to-point-convolution"]], "entanglement_theory.SeesawLOCC.point-to-point.convolution.content": [[16, "entanglement-theory-seesawlocc-point-to-point-convolution-content"]], "entanglement_theory.SeesawLOCC.point-to-point.info_recovering": [[17, "entanglement-theory-seesawlocc-point-to-point-info-recovering"]], "entanglement_theory.SeesawLOCC.point-to-point.state-extract": [[18, "entanglement-theory-seesawlocc-point-to-point-state-extract"]], "entanglement_theory.SeesawLOCC.point-to-point.state-extract.utils": [[19, "entanglement-theory-seesawlocc-point-to-point-state-extract-utils"]], "Welcome to RTM\u2019s documentation!": [[22, "welcome-to-rtm-s-documentation"]], "IDC": [[0, "module-IDC"]], "Magic": [[1, "module-Magic"]], "Magic.Magic_Qubit": [[2, "module-Magic.Magic_Qubit"]], "Magic.Magic_Qudit": [[3, "module-Magic.Magic_Qudit"]], "Utils": [[4, "module-Utils"]], "entanglement_theory": [[5, "module-entanglement_theory"]], "entanglement_theory.DynamicEntTheory": [[6, "module-entanglement_theory.DynamicEntTheory"]], "entanglement_theory.Fawzi": [[7, "module-entanglement_theory.Fawzi"]], "entanglement_theory.SeesawLOCC": [[8, "module-entanglement_theory.SeesawLOCC"]], "entanglement_theory.StaticEntTheory": [[20, "module-entanglement_theory.StaticEntTheory"]], "error_mitigation": [[21, "module-error_mitigation"]], "static_coherence": [[23, "module-static_coherence"]], "static_coherence.output_directory": [[24, "module-static_coherence.output_directory"]]}, "indexentries": {"applyquswitch() (in module idc)": [[0, "IDC.ApplyQuSwitch"]], "idc (module)": [[0, "module-IDC"]], "linkprod() (in module idc)": [[0, "IDC.LinkProd"]], "qs_k() (in module idc)": [[0, "IDC.QS_K"]], "qswitch() (in module idc)": [[0, "IDC.QSwitch"]], "magic (module)": [[1, "module-Magic"]], "magic.magic_qubit (module)": [[2, "module-Magic.Magic_Qubit"]], "pauli2stab() (in module magic.magic_qubit)": [[2, "Magic.Magic_Qubit.Pauli2Stab"]], "randomcspo() (in module magic.magic_qubit)": [[2, "Magic.Magic_Qubit.RandomCSPO"]], "rom_chan() (in module magic.magic_qubit)": [[2, "Magic.Magic_Qubit.RoM_Chan"]], "robmag() (in module magic.magic_qubit)": [[2, "Magic.Magic_Qubit.RobMag"]], "test_robmag() (in module magic.magic_qubit)": [[2, "Magic.Magic_Qubit.Test_RobMag"]], "trans_k() (in module magic.magic_qubit)": [[2, "Magic.Magic_Qubit.Trans_K"]], "chan_mana() (in module magic.magic_qudit)": [[3, "Magic.Magic_Qudit.Chan_Mana"]], "generate_a() (in module magic.magic_qudit)": [[3, "Magic.Magic_Qudit.Generate_A"]], "magic.magic_qudit (module)": [[3, "module-Magic.Magic_Qudit"]], "mana_state() (in module magic.magic_qudit)": [[3, "Magic.Magic_Qudit.Mana_state"]], "qutrithstate() (in module magic.magic_qudit)": [[3, "Magic.Magic_Qudit.QutritHstate"]], "qutritnstate() (in module magic.magic_qudit)": [[3, "Magic.Magic_Qudit.QutritNstate"]], "qutritsstate() (in module magic.magic_qudit)": [[3, "Magic.Magic_Qudit.QutritSstate"]], "qutrittstate() (in module magic.magic_qudit)": [[3, "Magic.Magic_Qudit.QutritTstate"]], "wtracenorm() (in module magic.magic_qudit)": [[3, "Magic.Magic_Qudit.WTraceNorm"]], "cqmi() (in module utils)": [[4, "Utils.CQMI"]], "flagpolestate() (in module utils)": [[4, "Utils.FlagPoleState"]], "ketbra() (in module utils)": [[4, "Utils.KetBra"]], "paulichan() (in module utils)": [[4, "Utils.PauliChan"]], "randmixedu() (in module utils)": [[4, "Utils.RandMixedU"]], "unitarychannel() (in module utils)": [[4, "Utils.UnitaryChannel"]], "utils (module)": [[4, "module-Utils"]], "examplefunc() (in module entanglement_theory)": [[5, "entanglement_theory.ExampleFunc"]], "gammappt() (in module entanglement_theory)": [[5, "entanglement_theory.GammaPPT"]], "virtualrecovery() (in module entanglement_theory)": [[5, "entanglement_theory.VirtualRecovery"]], "entanglement_theory (module)": [[5, "module-entanglement_theory"]], "maxlogneg() (in module entanglement_theory.dynamicenttheory)": [[6, "entanglement_theory.DynamicEntTheory.MaxLogNeg"]], "maxrainsinfo() (in module entanglement_theory.dynamicenttheory)": [[6, "entanglement_theory.DynamicEntTheory.MaxRainsInfo"]], "entanglement_theory.dynamicenttheory (module)": [[6, "module-entanglement_theory.DynamicEntTheory"]], "cqclacapacity() (in module entanglement_theory.fawzi)": [[7, "entanglement_theory.Fawzi.CQClaCapacity"]], "eaclacapacity() (in module entanglement_theory.fawzi)": [[7, "entanglement_theory.Fawzi.EAClaCapacity"]], "quadegcapacity() (in module entanglement_theory.fawzi)": [[7, "entanglement_theory.Fawzi.QuaDegCapacity"]], "relentropyent() (in module entanglement_theory.fawzi)": [[7, "entanglement_theory.Fawzi.RelEntropyEnt"]], "relentropyrecovery() (in module entanglement_theory.fawzi)": [[7, "entanglement_theory.Fawzi.RelEntropyRecovery"]], "entanglement_theory.fawzi (module)": [[7, "module-entanglement_theory.Fawzi"]], "entanglement_theory.seesawlocc (module)": [[8, "module-entanglement_theory.SeesawLOCC"]], "eeta() (in module entanglement_theory.staticenttheory)": [[20, "entanglement_theory.StaticEntTheory.Eeta"]], "logfidbineg() (in module entanglement_theory.staticenttheory)": [[20, "entanglement_theory.StaticEntTheory.LogFidBiNeg"]], "logfidppt() (in module entanglement_theory.staticenttheory)": [[20, "entanglement_theory.StaticEntTheory.LogFidPPT"]], "logneg() (in module entanglement_theory.staticenttheory)": [[20, "entanglement_theory.StaticEntTheory.LogNeg"]], "maxrains() (in module entanglement_theory.staticenttheory)": [[20, "entanglement_theory.StaticEntTheory.MaxRains"]], "rainsbound() (in module entanglement_theory.staticenttheory)": [[20, "entanglement_theory.StaticEntTheory.RainsBound"]], "templogneg() (in module entanglement_theory.staticenttheory)": [[20, "entanglement_theory.StaticEntTheory.TempLogNeg"]], "entanglement_theory.staticenttheory (module)": [[20, "module-entanglement_theory.StaticEntTheory"]], "proberrorcancel() (in module error_mitigation)": [[21, "error_mitigation.ProbErrorCancel"]], "proberrorcancelo() (in module error_mitigation)": [[21, "error_mitigation.ProbErrorCancelO"]], "proberrorcancelos() (in module error_mitigation)": [[21, "error_mitigation.ProbErrorCancelOS"]], "swapgenerator() (in module error_mitigation)": [[21, "error_mitigation.SwapGenerator"]], "error_mitigation (module)": [[21, "module-error_mitigation"]], "testing() (in module error_mitigation)": [[21, "error_mitigation.testing"]], "flagpolestate() (in module static_coherence)": [[23, "static_coherence.FlagPoleState"]], "ketbra() (in module static_coherence)": [[23, "static_coherence.KetBra"]], "robustnesscoherentchannel() (in module static_coherence)": [[23, "static_coherence.RobustnessCoherentChannel"]], "robustnesscoherentstate() (in module static_coherence)": [[23, "static_coherence.RobustnessCoherentState"]], "simulatecoherentchannel() (in module static_coherence)": [[23, "static_coherence.SimulateCoherentChannel"]], "simulatecoherentchannelprob() (in module static_coherence)": [[23, "static_coherence.SimulateCoherentChannelProb"]], "unitarychannel() (in module static_coherence)": [[23, "static_coherence.UnitaryChannel"]], "static_coherence (module)": [[23, "module-static_coherence"]], "testing() (in module static_coherence)": [[23, "static_coherence.testing"]], "static_coherence.output_directory (module)": [[24, "module-static_coherence.output_directory"]]}})