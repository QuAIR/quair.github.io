{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"QuAIRQuantum AI","text":"<p>Quantum AI Research (QuAIR) Lab, led by Prof. Xin Wang at HKUST (Guangzhou), is dedicated to pushing the fundamental boundaries of quantum information processing and driving technological advancements for quantum computing, guided by AI for Quantum and Quantum for AI.</p>"},{"location":"#quair-platform-beta","title":"QuAIR-Platform (beta)","text":""},{"location":"#avocado","title":"Avocado","text":"<p>Avocado is a quantum research platform designed to empower researchers in the QuAIR team, by providing a robust and efficient suite of tools tailored for quantum computing and quantum information research.</p>"},{"location":"#mpqq","title":"MPQQ","text":"<p>MPQQ: Matlab Package for Quantum Information Processing and Quantum Resource Theory is a MATLAB toolbox for exploring quantum resource theory.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Resource Measure: Functions to calculate the amount of resource for the given state/channel within entanglement, coherence, and magic theories. </li> <li>Channel Simulation: Capabilities to simulate quantum channels within different resource theories.</li> <li>Error Mitigation: Tools to compute the optimal probabilistic error cancellation protocols for a given noisy channel.</li> </ul>"},{"location":"#quick","title":"QuICK","text":"<p>QuICK: Quantum Integrity and Correction Kit is a quantum error correction package in the QuAIR team (under construction). The tools are for code construction and decoding.</p>"},{"location":"#features_1","title":"Features","text":"<ul> <li>QuICK: contain error correction codes include:</li> <li>code: classical and quantum code construction<ul> <li>ClassicalCode: binary classical linear block code</li> <li>Stabilizer: quantum stabilizer code</li> <li>CSSCode: quantum Calderbank-Shor-Steane(CSS) code</li> <li>HGP: quantum hypergraph product code</li> <li>LP: quantum lifted product code</li> </ul> </li> <li>utils: binary linear algebra and code utilities</li> </ul>"},{"location":"about/","title":"Libycas docuit","text":""},{"location":"about/#est-fundit-omnipotens-et-illo","title":"Est fundit omnipotens et illo","text":"<p>Lorem markdownum loqui lacrimisque licet generosaque interea abstulit propter. Petraei Helopsque inplerunt inquit, est piacula. Suae etiam sic putes referens positis de sarisa sic direptos vires, esse radiis geris. Vincla Laestrygonis hostem, iacentem facies vulnera non, sub nec deducentia. De consumptaque Leonis, et aurum cremavit cum animalibus calamis sinit cetera: lata iussi quae est!</p> <pre><code>if (program) {\n    vlb_user.daw(device_wizard_repeater);\n    box.motherboard_navigation_tablet(dock);\n} else {\n    commercial.gigahertzProxy(3);\n}\nif (sequence_toslink_num.nasDtd(drive.addressVectorCommerce.server(website,\n        softMultiplatformDaw, sidebar + monitorEncodingQuad))) {\n    static_ipod = affiliateHexadecimal;\n    name_file += hfs_parameter(digitize_insertion);\n}\nvar zip_lifo = ipx_format(kofficeSearch * newline, vfat_driver_function(\n        standaloneAffiliateDomain, 2, -5), lock_faq.rssLanguage.pram_lcd(\n        telecommunications_optical));\nif (flash.basic.spooling_fragmentation(cgiQueue, -4)) {\n    gopher *= pythonMacro;\n    gps *= debuggerWebmailMirror(rj, 17, typeImportImpression(-1));\n    menu.pharming *= 86;\n} else {\n    ctr_archive_design = trackback;\n}\nvar ecc = algorithm;\n</code></pre>"},{"location":"about/#dum-pygmalion-iugulo-dianae-concipientibus-ora","title":"Dum Pygmalion iugulo Dianae concipientibus ora","text":"<p>Meae fibra in adest et potuisse, geminaverat crimen Idalien, nam moriens salutis fallere possit. Sed nullam, est parentum videri, mercede accessisse eripies fraudat sola sua manuum prosiluit neque. Traxerat ego nisi acumine tibi gaudia: praebet malum funeribus vereri. Parte ab fauces curvatura eluserat?</p> <p>Solis nec iracundique tegumen. A probat cernunt illud senectus, est deae bracchia quatit. Lapsis deprendit attulit auctor prima; nec leges: effusus labores genuit. Ore eminet adverso? Sic caeli effodit tenebrisque lacrimas flexit multifidasque alumno opifex somno; sollertius?</p>"},{"location":"about/#armenti-incerto-de-certa-vivit-cibo","title":"Armenti incerto de certa vivit cibo","text":"<p>In dicta demittite Orithyia sic Sallentinumque inplent detulit oppida amor, ingenium spargere Aeeta, totidemque agros voce cerva caespite. At invecta: quo nisi prospicio lugebitis captam truncas eo o forma attonitas data quies, aut vestem videnda. Spatium arva patior iamque sociantem tellus undis bis et Tirynthius tantaeque certam ubi.</p> <p>In thalami nomina deceptam nurusque poenas clipeus quam secus intendit ait. Vitae glandiferam da numine serpens iugis. Dat meus et altera timui, tellus! Et intima clarique et suisque suos simulavit manes convulsaque erant.</p> <p>Harundine marmor ubi constat genus diu nec: iubet que mare reticere corpore. Et dabis forma horrescere fungi terram, concursibus, ait. Per instanti mollem, volucres adhuc gentisque, habet alis cives pariter verba suis, titubantis rebus? Lanient eicit est deducit, habebat aves herba mater palus aliisque ab cupidine tantum catenas et dum solis, credite.</p>"},{"location":"api/","title":"None","text":"<p>Your browser does not support iframes.</p>"},{"location":"installation/","title":"Installation","text":"<p>\u53ef\u53c2\u8003\u91cf\u6868\u6559\u7a0b\u7684\u672c\u5730\u5b89\u88c5\u65b9\u6cd5\u3002</p> <p>\u9996\u5148\u5b89\u88c5/\u6fc0\u6d3b anaconda \u73af\u5883\u7684\u6307\u4ee4</p> <pre><code>conda create -n avocado python=3.9\nconda activate avocado\nconda install jupyter notebook # \u914d\u7f6e jupyter \u73af\u5883\n</code></pre> <p>\u53c2\u8003\u91cf\u6868\u7684\u672c\u5730\u5b89\u88c5\u65b9\u6cd5\uff0c\u4f7f\u7528 <code>pip install -e .</code> \u5b89\u88c5 avocado\u3002\u5177\u4f53\u4ee3\u7801\u5982\u4e0b</p> <pre><code>cd \"C:\\Users\\#YOUR NAME HERE#\\QuAIR-platform\" # \u5207\u6362\u5230\u4ee3\u7801\u5e93\u6587\u4ef6\u5939\u6240\u5728\u4f4d\u7f6e\npip install -e . # \u5b89\u88c5 avocado\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5217\u6307\u4ee4\u94fe\u63a5 MATLAB</p> <pre><code>pip install matlabengine # \u5982\u4f7f\u7528\u6700\u65b0\u7248 MATLAB\uff0c\u5219\u4f7f\u7528\u8be5\u6307\u4ee4\u5b89\u88c5\npip install matlabengine==9.14.2 # \u5982\u4f7f\u7528\u65e7\u7248\uff0c\u8bf7\u67e5\u8be2\u5bf9\u5e94\u7248\u672c\u53ef\u4ee5\u4f7f\u7528\u7684 matlabengine\n</code></pre> <p>\u6700\u540e\u8fd0\u884c <code>test_grad.ipynb</code> \u6d4b\u8bd5 avocado \u662f\u5426\u5b89\u88c5\u6210\u529f\u3002</p>"},{"location":"installation/#avocadoapi","title":"\u66f4\u65b0Avocado\u7684API\u6587\u6863","text":""},{"location":"installation/#_1","title":"\u529f\u80fd","text":"<p>\u66f4\u65b0Avocado\u51fd\u6570API\u6587\u6863\uff08HTML\u683c\u5f0f\uff09</p>"},{"location":"installation/#_2","title":"\u5b89\u88c5\u65b9\u6cd5","text":"<p>\u7528\u4e0b\u5217\u7684\u6307\u4ee4\u5b89\u88c5\u66f4\u65b0API\u6587\u6863\u5fc5\u8981\u7684\u5e93</p> <pre><code>\npip install docutils==0.18.1\npip install sphinx-rtd-theme==1.3.0\npip install Sphinx==6.1.3\n</code></pre>"},{"location":"QRLab/about/","title":"QRLab","text":"<p>QRLab is a MATLAB toolbox for exploring quantum information processing and quantum resource theory.</p>"},{"location":"QRLab/about/#features","title":"Features","text":"<ul> <li> <p>Entanglement Theory: </p> <ul> <li> <p>Static Entanglement Measure: Tempered Logarithmic Negativity \\(E_{ \\mathrm{\\tau}}\\), Rains Bound \\(R\\), MaxRainsEntropy \\(R_{ \\mathrm{max}}\\), Logarithmic Negativity \\(E_\\text{N}\\), \\(E_{ \\mathrm{PPT}}\\), \\(E_ \\mathrm{eta}\\)</p> </li> <li> <p>Dynamic Entanglement Measure: Max Logarithmic Negativity, Max Rains information. </p> </li> <li> <p>Quantum Capacity</p> </li> </ul> </li> <li> <p>Coherence Theory: </p> <ul> <li> <p>Static Coherence Measure: Robustness of Coherence </p> </li> <li> <p>Channel Simulation: Simulating non-free operations via resource states.</p> </li> </ul> </li> <li> <p>Magic Theory: </p> <ul> <li> <p>Static Magic Measure: Robustness of Magic (qubit), Magic Mana (qudit), max/min Thuama (qudit) </p> </li> <li> <p>Representative Magic State Generation</p> </li> </ul> </li> <li> <p>Quasi-Theory: </p> <ul> <li> <p>Probabilistic error cancelation </p> </li> <li> <p>Observable dependent probabilistic error cancellation </p> </li> <li> <p>Observable dependent deterministic error cancelation </p> </li> <li> <p>Circuit Knitting </p> </li> <li> <p>Virtual Recovery</p> </li> </ul> </li> <li> <p>Supermap: </p> <ul> <li>Quantum Switch (both kraus and choi), Apply Quantum Switch</li> <li>Link Product</li> </ul> </li> <li> <p>Seesaw Algorithms: Algorithms for providing sub-optimal solutions for non-linear optimization problems. </p> <ul> <li> <p>CHSH game </p> </li> <li> <p>LOCC protocol</p> </li> </ul> </li> <li> <p>Extra Functions - Quantum Information Processing: </p> <ul> <li> <p>Conditional quantum mutual information </p> </li> <li> <p>Virtual Markovian State</p> </li> </ul> </li> </ul>"},{"location":"QRLab/about/#requirements","title":"Requirements","text":"<ol> <li>QETLAB == 0.9</li> <li>CVX == 2.1</li> </ol>"},{"location":"QRLab/about/#installation","title":"Installation","text":"<ol> <li>Clone this repository to your local machine.</li> <li>Add the package to your MATLAB path:</li> </ol> <pre><code>addpath('path_to_package');\n</code></pre>"},{"location":"QRLab/about/#getting-started-use-cases","title":"Getting Started: Use Cases","text":"<p>To use the package, simply call the function you need with appropriate parameters. For example:</p> <pre><code>% To calculate the robustness of entanglement\nrho = [0.5, 0.5; 0.5, 0.5]; % Define a quantum state\nrobustness = EntanglementRobustness(rho);\ndisp('Robustness of Entanglement:');\ndisp(robustness);\n</code></pre>"},{"location":"QRLab/about/#more-functions-are-coming","title":"More functions are coming.","text":""},{"location":"QRLab/about/#contributing","title":"Contributing","text":"<p>Contributions to expand and improve this package are welcome.</p>"},{"location":"QuICK/about/","title":"QuICK","text":"<p>Quantum Integrity and Correction Kit (QuICK) is a quantum error correction package in the QuAIR team (under construction). The tools are for code construction and decoding.</p> <p> </p>"},{"location":"QuICK/about/#features","title":"Features","text":"<ul> <li><code>QuICK</code>: contain error correction codes include:</li> <li><code>code</code>: classical and quantum code construction<ul> <li><code>ClassicalCode</code>: binary classical linear block code</li> <li><code>Stabilizer:</code> quantum stabilizer code</li> <li><code>CSSCode</code>: quanutm Calderbank-Shor-Steane(CSS) code</li> <li><code>HGP</code>: quantum hypergraph product code</li> <li><code>LP</code>: quantum lifted product code</li> </ul> </li> <li><code>utils</code>: binary linear algebra and code utilities</li> <li><code>dataset</code>: commonly used classical and quantum codes</li> <li><code>error</code>: simple Pauli error</li> <li><code>decoder</code>: code decoder<ul> <li><code>bp_decoder</code>: belief propagation sum-product decoder</li> </ul> </li> <li><code>tutorial</code>: tutorials for quantum error correction</li> </ul>"},{"location":"QuICK/about/#installation","title":"Installation","text":"<p>Set up Anaconda environment</p> <pre><code>conda create -n quair python=3.10\nconda activate quair\nconda install jupyter notebook\n</code></pre> <p>Install QuICK locally</p> <pre><code>cd ./&lt; your place for QuICK &gt;\npip install -e .\n</code></pre>"},{"location":"QuICK/about/#tutorials","title":"Tutorials","text":"<ul> <li>Error Correction Codes</li> <li>CSS Code</li> <li>Hypergraph Product Code</li> <li>Lifted Product Code</li> <li>Stabilizer Code</li> <li>Error Correction Decoders</li> <li>Belief Propagation Decoder</li> <li>How to use Pymatching</li> </ul>"},{"location":"avocado/","title":"About","text":"<p>Avocado is a quantum rsearch platform designed to empower researchers in the QuAIR team, by providing a robust and efficient suite of tools tailored for quantum computing and quantum information research.</p>"},{"location":"avocado/tutorial/","title":"Tutorial","text":"<p>\u5728linux\u73af\u5883\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u6307\u4ee4\uff0c\u8fd0\u884c\u5b8c\u6210\u540eAPI\u6587\u6863\u5c31\u4f1a\u81ea\u52a8\u6253\u5f00\uff1a</p> <pre><code>cd \"C:\\Users\\#YOUR NAME HERE#\\QuAIR-platform\" # \u5207\u6362\u5230\u4ee3\u7801\u5e93\u6587\u4ef6\u5939\u6240\u5728\u4f4d\u7f6e\n./api.sh # \u8f93\u5165\u6b64\u6307\u4ee4\u56de\u8f66\u540e\u7a0d\u7b49\u4f1a\u66f4\u65b0\n</code></pre>"}]}